name: CI/CD Pipeline for Spring Boot

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Compile the application
      run: mvn compile

    - name: Run unit tests
      run: mvn test

  package:
    needs: build
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Package the application
      run: mvn package

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: target/*.jar

  docker:
    needs: package
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: target/

    - name: Build Docker image
      run: |
        docker build -t my-spring-app:latest .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to Docker Hub
      run: |
        docker tag my-spring-app:latest ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest

    - name: Tag Docker image for local registry
      run: |
        docker tag my-spring-app:latest localhost:5000/my-spring-app:latest

    - name: Push Docker image to local registry
      run: |
        docker push localhost:5000/my-spring-app:latest

  deploy:
    needs: docker
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Minikube Docker environment
      run: |
        eval $(minikube docker-env)

    - name: Load Docker image into Minikube
      run: |
        docker load < <(docker save my-spring-app:latest)

    - name: Deploy to Minikube
      run: |
        kubectl apply -f deployment.yaml
